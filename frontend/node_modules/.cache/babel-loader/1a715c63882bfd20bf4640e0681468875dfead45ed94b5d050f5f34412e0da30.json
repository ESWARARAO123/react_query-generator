{"ast":null,"code":"var _jsxFileName = \"/home/eswar/esw/chat2sql/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button, Paper, Typography, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport ExecuteIcon from './assets/task-management.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  marginTop: theme.spacing(3),\n  backgroundColor: '#f5f5f5'\n}));\n_c = StyledPaper;\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px'\n});\n_c2 = Icon;\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedSql, setEditedSql] = useState('');\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch('http://localhost:8005/api/schema');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n    fetchSchema();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditClick = () => {\n    setIsEditing(true);\n    setEditedSql(result.sql);\n  };\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    setEditedSql('');\n  };\n  const handleExecuteEdited = async () => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: editedSql\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      setResult(data);\n      setIsEditing(false);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to convert result to CSV\n  const downloadCSV = () => {\n    if (!result || !result.data || !result.columns) return;\n    const csvRows = [];\n    // Add header\n    csvRows.push(result.columns.join(','));\n    // Add rows\n    result.data.forEach(row => {\n      csvRows.push(result.columns.map(col => {\n        var _row$col;\n        return JSON.stringify((_row$col = row[col]) !== null && _row$col !== void 0 ? _row$col : '');\n      }).join(','));\n    });\n    const csvString = csvRows.join('\\n');\n    const blob = new Blob([csvString], {\n      type: 'text/csv'\n    });\n    saveAs(blob, 'query_results.csv');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        src: BrainIcon,\n        alt: \"Brain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"PostgreSQL Natural Language Query Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), schemaLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Loading database schema...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter your question\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          margin: \"normal\",\n          variant: \"outlined\",\n          disabled: !schema || schemaLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading || !schema || schemaLoading,\n          sx: {\n            mt: 2\n          },\n          children: \"Generate SQL & Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledPaper, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2,\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              src: GenerateIcon,\n              alt: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Generated SQL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), !isEditing && /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleEditClick,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            value: editedSql,\n            onChange: e => setEditedSql(e.target.value),\n            variant: \"outlined\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 32\n              }, this),\n              onClick: handleCancelEdit,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 32\n              }, this),\n              onClick: handleExecuteEdited,\n              disabled: loading,\n              children: \"Execute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            backgroundColor: '#f8f9fa',\n            padding: '1rem',\n            borderRadius: '4px',\n            overflowX: 'auto'\n          },\n          children: result.sql\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), result.graph && /*#__PURE__*/_jsxDEV(StyledPaper, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            src: SuccessIcon,\n            alt: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Data Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${result.graph}`,\n            alt: \"Data Visualization\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyledPaper, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            src: SuccessIcon,\n            alt: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Query Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: result.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: column\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: result.data.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: result.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row[column]\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this))\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: downloadCSV,\n            children: \"Download CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6Hcsw2sastwcmJzBCtH1SCg48hM=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"Icon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","Paper","Typography","Box","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","styled","BrainIcon","GenerateIcon","ExecuteIcon","SuccessIcon","ErrorIcon","EditIcon","CancelIcon","SendIcon","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","padding","spacing","marginTop","backgroundColor","_c","Icon","width","height","marginRight","_c2","App","_s","query","setQuery","loading","setLoading","error","setError","result","setResult","schema","setSchema","schemaLoading","setSchemaLoading","isEditing","setIsEditing","editedSql","setEditedSql","fetchSchema","response","fetch","ok","Error","data","json","startsWith","err","message","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","detail","handleEditClick","sql","handleCancelEdit","handleExecuteEdited","downloadCSV","columns","csvRows","push","join","forEach","row","map","col","_row$col","csvString","blob","Blob","type","maxWidth","children","sx","display","alignItems","my","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","size","ml","severity","mt","onSubmit","fullWidth","label","value","onChange","target","margin","disabled","color","mb","justifyContent","onClick","multiline","rows","gap","startIcon","style","borderRadius","overflowX","graph","column","i","_c3","$RefreshReg$"],"sources":["/home/eswar/esw/chat2sql/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  TextField, \n  Button, \n  Paper, \n  Typography, \n  Box,\n  CircularProgress,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport ExecuteIcon from './assets/task-management.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport { saveAs } from 'file-saver';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(3),\n  marginTop: theme.spacing(3),\n  backgroundColor: '#f5f5f5',\n}));\n\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px',\n});\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedSql, setEditedSql] = useState('');\n\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch('http://localhost:8005/api/schema');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n\n    fetchSchema();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      \n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n    setEditedSql(result.sql);\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    setEditedSql('');\n  };\n\n  const handleExecuteEdited = async () => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query: editedSql }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      \n      setResult(data);\n      setIsEditing(false);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to convert result to CSV\n  const downloadCSV = () => {\n    if (!result || !result.data || !result.columns) return;\n    const csvRows = [];\n    // Add header\n    csvRows.push(result.columns.join(','));\n    // Add rows\n    result.data.forEach(row => {\n      csvRows.push(result.columns.map(col => JSON.stringify(row[col] ?? '')).join(','));\n    });\n    const csvString = csvRows.join('\\n');\n    const blob = new Blob([csvString], { type: 'text/csv' });\n    saveAs(blob, 'query_results.csv');\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ display: 'flex', alignItems: 'center', my: 3 }}>\n        <Icon src={BrainIcon} alt=\"Brain\" />\n        <Typography variant=\"h4\" component=\"h1\">\n          PostgreSQL Natural Language Query Assistant\n        </Typography>\n      </Box>\n\n      {schemaLoading && (\n        <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n          <Typography sx={{ ml: 2 }}>Loading database schema...</Typography>\n        </Box>\n      )}\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <StyledPaper>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            label=\"Enter your question\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={!schema || schemaLoading}\n          />\n          <Button \n            type=\"submit\" \n            variant=\"contained\" \n            color=\"primary\"\n            disabled={loading || !schema || schemaLoading}\n            sx={{ mt: 2 }}\n          >\n            Generate SQL & Run\n          </Button>\n        </form>\n      </StyledPaper>\n\n      {loading && (\n        <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n          <Typography sx={{ ml: 2 }}>Processing...</Typography>\n        </Box>\n      )}\n\n      {result && (\n        <>\n          <StyledPaper sx={{ mt: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, justifyContent: 'space-between' }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Icon src={GenerateIcon} alt=\"Generate\" />\n                <Typography variant=\"h6\">Generated SQL</Typography>\n              </Box>\n              {!isEditing && (\n                <IconButton onClick={handleEditClick} color=\"primary\">\n                  <EditIcon />\n                </IconButton>\n              )}\n            </Box>\n            {isEditing ? (\n              <>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={4}\n                  value={editedSql}\n                  onChange={(e) => setEditedSql(e.target.value)}\n                  variant=\"outlined\"\n                  sx={{ mb: 2 }}\n                />\n                <Box sx={{ display: 'flex', gap: 2 }}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"error\"\n                    startIcon={<CancelIcon />}\n                    onClick={handleCancelEdit}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SendIcon />}\n                    onClick={handleExecuteEdited}\n                    disabled={loading}\n                  >\n                    Execute\n                  </Button>\n                </Box>\n              </>\n            ) : (\n              <pre style={{ \n                backgroundColor: '#f8f9fa', \n                padding: '1rem',\n                borderRadius: '4px',\n                overflowX: 'auto'\n              }}>\n                {result.sql}\n              </pre>\n            )}\n          </StyledPaper>\n\n          {result.graph && (\n            <StyledPaper sx={{ mt: 3 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Icon src={SuccessIcon} alt=\"Success\" />\n                <Typography variant=\"h6\">Data Visualization</Typography>\n              </Box>\n              <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                <img \n                  src={`data:image/png;base64,${result.graph}`}\n                  alt=\"Data Visualization\"\n                  style={{ maxWidth: '100%', height: 'auto' }}\n                />\n              </Box>\n            </StyledPaper>\n          )}\n\n          <StyledPaper sx={{ mt: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <Icon src={SuccessIcon} alt=\"Success\" />\n              <Typography variant=\"h6\">Query Results</Typography>\n            </Box>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {result.columns.map((column) => (\n                      <TableCell key={column}>{column}</TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {result.data.map((row, i) => (\n                    <TableRow key={i}>\n                      {result.columns.map((column) => (\n                        <TableCell key={column}>{row[column]}</TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n              <Button variant=\"outlined\" color=\"primary\" onClick={downloadCSV}>\n                Download CSV\n              </Button>\n            </Box>\n          </StyledPaper>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}