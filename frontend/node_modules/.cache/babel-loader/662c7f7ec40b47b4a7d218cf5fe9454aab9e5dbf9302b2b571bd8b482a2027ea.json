{"ast":null,"code":"var _jsxFileName = \"/home/eswar/esw/chat2sql/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, TextField, Button, Paper, Typography, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, List, ListItem, Divider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://localhost:5000';\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: '#f5f5f5',\n  display: 'flex',\n  gap: theme.spacing(2),\n  alignItems: 'flex-start',\n  maxWidth: '1200px',\n  margin: '0 auto'\n}));\n_c = StyledPaper;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  height: 'calc(100vh - 180px)',\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n}));\n_c2 = ChatContainer;\nconst TableWrapper = styled(Box)(({\n  theme\n}) => ({\n  maxHeight: '400px',\n  overflowY: 'auto',\n  border: '1px solid #e0e0e0',\n  borderRadius: theme.spacing(1),\n  '& .MuiTable-root': {\n    borderCollapse: 'separate',\n    borderSpacing: 0\n  },\n  '& .MuiTableHead-root': {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: '#f5f5f5',\n    zIndex: 1\n  },\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f5f5f5',\n    fontWeight: 'bold',\n    borderBottom: '2px solid #e0e0e0'\n  },\n  '& .MuiTableCell-root': {\n    padding: theme.spacing(1),\n    whiteSpace: 'nowrap'\n  }\n}));\n_c3 = TableWrapper;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  position: 'fixed',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  boxShadow: '0 -2px 4px rgba(0,0,0,0.1)',\n  zIndex: 1000\n}));\n_c4 = InputContainer;\nconst MessageBubble = styled(Box)(({\n  theme,\n  isUser\n}) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: isUser ? '#e3f2fd' : '#f5f5f5',\n  marginLeft: isUser ? 'auto' : 0,\n  marginRight: isUser ? 0 : 'auto'\n}));\n_c5 = MessageBubble;\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px'\n});\n_c6 = Icon;\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch(`${BACKEND_URL}/api/schema`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n    fetchSchema();\n  }, []);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: query\n    }]);\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n\n      // Add system message with SQL\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Generated SQL Query:',\n        sql: data.sql\n      }]);\n\n      // Add data message\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Query Results:',\n        data: data.data,\n        columns: data.columns\n      }]);\n\n      // Add graph if available\n      if (data.graph) {\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: 'Data Visualization:',\n          graph: data.graph\n        }]);\n      }\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        content: `Error: ${err.message}`\n      }]);\n    } finally {\n      setLoading(false);\n      setQuery('');\n    }\n  };\n  const handleDownloadCSV = async (data, columns) => {\n    try {\n      // Ask user for filename\n      const filename = prompt('Enter filename for CSV download:', 'query_results.csv');\n      if (!filename) return; // User cancelled\n\n      // Ensure filename has .csv extension\n      const finalFilename = filename.endsWith('.csv') ? filename : `${filename}.csv`;\n\n      // Create a temporary link element\n      const link = document.createElement('a');\n\n      // Convert data to CSV\n      const csvRows = [];\n      // Add header\n      csvRows.push(columns.join(','));\n      // Add rows\n      data.forEach(row => {\n        csvRows.push(columns.map(col => {\n          var _row$col;\n          return JSON.stringify((_row$col = row[col]) !== null && _row$col !== void 0 ? _row$col : '');\n        }).join(','));\n      });\n      const csvString = csvRows.join('\\n');\n\n      // Create blob and URL\n      const blob = new Blob([csvString], {\n        type: 'text/csv;charset=utf-8'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Set up the link\n      link.href = url;\n      link.setAttribute('download', finalFilename);\n\n      // Append to body, click, and remove\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // Clean up\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading CSV:', error);\n      alert('Failed to download CSV file');\n    }\n  };\n  const renderMessage = message => {\n    switch (message.type) {\n      case 'user':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          isUser: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this);\n      case 'system':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), message.sql && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f8f9fa',\n              padding: '1rem',\n              borderRadius: '4px',\n              overflowX: 'auto',\n              marginBottom: '1rem'\n            },\n            children: message.sql\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), message.data && message.columns && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableWrapper, {\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  stickyHeader: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: message.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: column\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: message.data.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: message.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row[column]\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 31\n                      }, this))\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleDownloadCSV(message.data, message.columns),\n                startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 32\n                }, this),\n                children: \"Download CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), message.graph && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${message.graph}`,\n              alt: \"Data Visualization\",\n              style: {\n                maxWidth: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (query.trim() && !loading && schema && !schemaLoading) {\n        handleSubmit(e);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      pb: '80px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        src: BrainIcon,\n        alt: \"Brain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"PostgreSQL Natural Language Query Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), schemaLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Loading database schema...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      ref: chatContainerRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n        children: renderMessage(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            ml: 2\n          },\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter your question\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyPress: handleKeyPress,\n          variant: \"outlined\",\n          disabled: !schema || schemaLoading || loading,\n          multiline: true,\n          rows: 1,\n          sx: {\n            flex: 1,\n            '& .MuiOutlinedInput-root': {\n              height: '48px'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading || !schema || schemaLoading,\n          onClick: handleSubmit,\n          sx: {\n            height: '48px',\n            minWidth: '100px'\n          },\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 22\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2hJzkDGu6ByeEeCp44jhGlbS0a4=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"TableWrapper\");\n$RefreshReg$(_c4, \"InputContainer\");\n$RefreshReg$(_c5, \"MessageBubble\");\n$RefreshReg$(_c6, \"Icon\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","TextField","Button","Paper","Typography","Box","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","List","ListItem","Divider","styled","BrainIcon","GenerateIcon","SuccessIcon","ErrorIcon","EditIcon","CancelIcon","SendIcon","DownloadIcon","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_URL","StyledPaper","theme","padding","spacing","backgroundColor","display","gap","alignItems","maxWidth","margin","_c","ChatContainer","height","overflowY","borderRadius","marginBottom","boxShadow","_c2","TableWrapper","maxHeight","border","borderCollapse","borderSpacing","position","top","zIndex","fontWeight","borderBottom","whiteSpace","_c3","InputContainer","bottom","left","right","_c4","MessageBubble","isUser","marginLeft","marginRight","_c5","Icon","width","_c6","App","_s","query","setQuery","loading","setLoading","error","setError","messages","setMessages","schema","setSchema","schemaLoading","setSchemaLoading","chatContainerRef","fetchSchema","response","fetch","ok","Error","data","json","startsWith","err","message","current","scrollTop","scrollHeight","handleSubmit","e","preventDefault","prev","type","content","method","headers","body","JSON","stringify","detail","sql","columns","graph","handleDownloadCSV","filename","prompt","finalFilename","endsWith","link","document","createElement","csvRows","push","join","forEach","row","map","col","_row$col","csvString","blob","Blob","url","window","URL","createObjectURL","href","setAttribute","appendChild","click","removeChild","revokeObjectURL","console","alert","renderMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","style","overflowX","size","stickyHeader","column","i","sx","justifyContent","mt","color","onClick","startIcon","src","alt","severity","handleKeyPress","key","shiftKey","trim","flexDirection","pb","my","component","ml","ref","index","fullWidth","label","value","onChange","target","onKeyPress","disabled","multiline","rows","flex","minWidth","endIcon","_c7","$RefreshReg$"],"sources":["/home/eswar/esw/chat2sql/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Container, \n  TextField, \n  Button, \n  Paper, \n  Typography, \n  Box,\n  CircularProgress,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  List,\n  ListItem,\n  Divider\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { saveAs } from 'file-saver';\n\nconst BACKEND_URL = 'http://localhost:5000';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: '#f5f5f5',\n  display: 'flex',\n  gap: theme.spacing(2),\n  alignItems: 'flex-start',\n  maxWidth: '1200px',\n  margin: '0 auto',\n}));\n\nconst ChatContainer = styled(Box)(({ theme }) => ({\n  height: 'calc(100vh - 180px)',\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n}));\n\nconst TableWrapper = styled(Box)(({ theme }) => ({\n  maxHeight: '400px',\n  overflowY: 'auto',\n  border: '1px solid #e0e0e0',\n  borderRadius: theme.spacing(1),\n  '& .MuiTable-root': {\n    borderCollapse: 'separate',\n    borderSpacing: 0,\n  },\n  '& .MuiTableHead-root': {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: '#f5f5f5',\n    zIndex: 1,\n  },\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f5f5f5',\n    fontWeight: 'bold',\n    borderBottom: '2px solid #e0e0e0',\n  },\n  '& .MuiTableCell-root': {\n    padding: theme.spacing(1),\n    whiteSpace: 'nowrap',\n  },\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  boxShadow: '0 -2px 4px rgba(0,0,0,0.1)',\n  zIndex: 1000,\n}));\n\nconst MessageBubble = styled(Box)(({ theme, isUser }) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: isUser ? '#e3f2fd' : '#f5f5f5',\n  marginLeft: isUser ? 'auto' : 0,\n  marginRight: isUser ? 0 : 'auto',\n}));\n\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px',\n});\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch(`${BACKEND_URL}/api/schema`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n\n    fetchSchema();\n  }, []);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    // Add user message\n    setMessages(prev => [...prev, { type: 'user', content: query }]);\n\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      \n      // Add system message with SQL\n      setMessages(prev => [...prev, { \n        type: 'system', \n        content: 'Generated SQL Query:',\n        sql: data.sql \n      }]);\n\n      // Add data message\n      setMessages(prev => [...prev, { \n        type: 'system', \n        content: 'Query Results:',\n        data: data.data,\n        columns: data.columns\n      }]);\n\n      // Add graph if available\n      if (data.graph) {\n        setMessages(prev => [...prev, { \n          type: 'system', \n          content: 'Data Visualization:',\n          graph: data.graph\n        }]);\n      }\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, { \n        type: 'error', \n        content: `Error: ${err.message}` \n      }]);\n    } finally {\n      setLoading(false);\n      setQuery('');\n    }\n  };\n\n  const handleDownloadCSV = async (data, columns) => {\n    try {\n      // Ask user for filename\n      const filename = prompt('Enter filename for CSV download:', 'query_results.csv');\n      if (!filename) return; // User cancelled\n\n      // Ensure filename has .csv extension\n      const finalFilename = filename.endsWith('.csv') ? filename : `${filename}.csv`;\n      \n      // Create a temporary link element\n      const link = document.createElement('a');\n      \n      // Convert data to CSV\n      const csvRows = [];\n      // Add header\n      csvRows.push(columns.join(','));\n      // Add rows\n      data.forEach(row => {\n        csvRows.push(columns.map(col => JSON.stringify(row[col] ?? '')).join(','));\n      });\n      const csvString = csvRows.join('\\n');\n      \n      // Create blob and URL\n      const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8' });\n      const url = window.URL.createObjectURL(blob);\n      \n      // Set up the link\n      link.href = url;\n      link.setAttribute('download', finalFilename);\n      \n      // Append to body, click, and remove\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      // Clean up\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading CSV:', error);\n      alert('Failed to download CSV file');\n    }\n  };\n\n  const renderMessage = (message) => {\n    switch (message.type) {\n      case 'user':\n        return (\n          <MessageBubble isUser>\n            <Typography>{message.content}</Typography>\n          </MessageBubble>\n        );\n      case 'system':\n        return (\n          <MessageBubble>\n            <Typography variant=\"h6\" gutterBottom>{message.content}</Typography>\n            {message.sql && (\n              <pre style={{ \n                backgroundColor: '#f8f9fa', \n                padding: '1rem',\n                borderRadius: '4px',\n                overflowX: 'auto',\n                marginBottom: '1rem'\n              }}>\n                {message.sql}\n              </pre>\n            )}\n            {message.data && message.columns && (\n              <>\n                <TableWrapper>\n                  <TableContainer>\n                    <Table size=\"small\" stickyHeader>\n                      <TableHead>\n                        <TableRow>\n                          {message.columns.map((column) => (\n                            <TableCell key={column}>{column}</TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {message.data.map((row, i) => (\n                          <TableRow key={i}>\n                            {message.columns.map((column) => (\n                              <TableCell key={column}>{row[column]}</TableCell>\n                            ))}\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TableWrapper>\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n                  <Button \n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleDownloadCSV(message.data, message.columns)}\n                    startIcon={<DownloadIcon />}\n                  >\n                    Download CSV\n                  </Button>\n                </Box>\n              </>\n            )}\n            {message.graph && (\n              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                <img \n                  src={`data:image/png;base64,${message.graph}`}\n                  alt=\"Data Visualization\"\n                  style={{ maxWidth: '100%', height: 'auto' }}\n                />\n              </Box>\n            )}\n          </MessageBubble>\n        );\n      case 'error':\n        return (\n          <MessageBubble>\n            <Alert severity=\"error\">{message.content}</Alert>\n          </MessageBubble>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (query.trim() && !loading && schema && !schemaLoading) {\n        handleSubmit(e);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ height: '100vh', display: 'flex', flexDirection: 'column', pb: '80px' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n        <Icon src={BrainIcon} alt=\"Brain\" />\n        <Typography variant=\"h4\" component=\"h1\">\n          PostgreSQL Natural Language Query Assistant\n        </Typography>\n      </Box>\n\n      {schemaLoading && (\n        <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n          <Typography sx={{ ml: 2 }}>Loading database schema...</Typography>\n        </Box>\n      )}\n\n      <ChatContainer ref={chatContainerRef}>\n        {messages.map((message, index) => (\n          <Box key={index}>\n            {renderMessage(message)}\n          </Box>\n        ))}\n        {loading && (\n          <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n            <CircularProgress size={24} />\n            <Typography sx={{ ml: 2 }}>Processing...</Typography>\n          </Box>\n        )}\n      </ChatContainer>\n\n      <InputContainer>\n        <StyledPaper>\n          <TextField\n            fullWidth\n            label=\"Enter your question\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyPress={handleKeyPress}\n            variant=\"outlined\"\n            disabled={!schema || schemaLoading || loading}\n            multiline\n            rows={1}\n            sx={{ \n              flex: 1,\n              '& .MuiOutlinedInput-root': {\n                height: '48px',\n              }\n            }}\n          />\n          <Button \n            type=\"submit\" \n            variant=\"contained\" \n            color=\"primary\"\n            disabled={loading || !schema || schemaLoading}\n            onClick={handleSubmit}\n            sx={{ \n              height: '48px',\n              minWidth: '100px'\n            }}\n            endIcon={<SendIcon />}\n          >\n            Send\n          </Button>\n        </StyledPaper>\n      </InputContainer>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}