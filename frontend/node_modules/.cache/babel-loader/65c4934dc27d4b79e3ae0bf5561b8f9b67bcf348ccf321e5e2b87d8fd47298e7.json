{"ast":null,"code":"var _jsxFileName = \"/home/eswar/esw/chat2sql/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, TextField, Button, Paper, Typography, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, List, ListItem, Divider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  marginTop: theme.spacing(3),\n  backgroundColor: '#f5f5f5'\n}));\n_c = StyledPaper;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  height: 'calc(100vh - 200px)',\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c2 = ChatContainer;\nconst MessageBubble = styled(Box)(({\n  theme,\n  isUser\n}) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: isUser ? '#e3f2fd' : '#f5f5f5',\n  marginLeft: isUser ? 'auto' : 0,\n  marginRight: isUser ? 0 : 'auto'\n}));\n_c3 = MessageBubble;\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px'\n});\n_c4 = Icon;\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch('http://localhost:8005/api/schema');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n    fetchSchema();\n  }, []);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: query\n    }]);\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n\n      // Add system message with SQL\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Generated SQL Query:',\n        sql: data.sql\n      }]);\n\n      // Add data message\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Query Results:',\n        data: data.data,\n        columns: data.columns\n      }]);\n\n      // Add graph if available\n      if (data.graph) {\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: 'Data Visualization:',\n          graph: data.graph\n        }]);\n      }\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        content: `Error: ${err.message}`\n      }]);\n    } finally {\n      setLoading(false);\n      setQuery('');\n    }\n  };\n  const downloadCSV = (data, columns) => {\n    if (!data || !columns) return;\n    const csvRows = [];\n    // Add header\n    csvRows.push(columns.join(','));\n    // Add rows\n    data.forEach(row => {\n      csvRows.push(columns.map(col => {\n        var _row$col;\n        return JSON.stringify((_row$col = row[col]) !== null && _row$col !== void 0 ? _row$col : '');\n      }).join(','));\n    });\n    const csvString = csvRows.join('\\n');\n    const blob = new Blob([csvString], {\n      type: 'text/csv'\n    });\n    saveAs(blob, 'query_results.csv');\n  };\n  const renderMessage = message => {\n    switch (message.type) {\n      case 'user':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          isUser: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this);\n      case 'system':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), message.sql && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f8f9fa',\n              padding: '1rem',\n              borderRadius: '4px',\n              overflowX: 'auto',\n              marginBottom: '1rem'\n            },\n            children: message.sql\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), message.data && message.columns && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: message.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: column\n                    }, column, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: message.data.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: message.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: row[column]\n                    }, column, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 29\n                    }, this))\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => downloadCSV(message.data, message.columns),\n                children: \"Download CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), message.graph && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${message.graph}`,\n              alt: \"Data Visualization\",\n              style: {\n                maxWidth: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        src: BrainIcon,\n        alt: \"Brain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"PostgreSQL Natural Language Query Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), schemaLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Loading database schema...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      ref: chatContainerRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n        children: renderMessage(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            ml: 2\n          },\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter your question\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          margin: \"normal\",\n          variant: \"outlined\",\n          disabled: !schema || schemaLoading || loading,\n          multiline: true,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading || !schema || schemaLoading,\n          sx: {\n            mt: 2\n          },\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 22\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2hJzkDGu6ByeEeCp44jhGlbS0a4=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"MessageBubble\");\n$RefreshReg$(_c4, \"Icon\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","TextField","Button","Paper","Typography","Box","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","List","ListItem","Divider","styled","BrainIcon","GenerateIcon","SuccessIcon","ErrorIcon","EditIcon","CancelIcon","SendIcon","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","padding","spacing","marginTop","backgroundColor","_c","ChatContainer","height","overflowY","borderRadius","marginBottom","_c2","MessageBubble","isUser","maxWidth","marginLeft","marginRight","_c3","Icon","width","_c4","App","_s","query","setQuery","loading","setLoading","error","setError","messages","setMessages","schema","setSchema","schemaLoading","setSchemaLoading","chatContainerRef","fetchSchema","response","fetch","ok","Error","data","json","startsWith","err","message","current","scrollTop","scrollHeight","handleSubmit","e","preventDefault","prev","type","content","method","headers","body","JSON","stringify","detail","sql","columns","graph","downloadCSV","csvRows","push","join","forEach","row","map","col","_row$col","csvString","blob","Blob","renderMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","style","overflowX","size","column","i","sx","display","justifyContent","mt","color","onClick","src","alt","severity","alignItems","my","component","ml","ref","index","onSubmit","fullWidth","label","value","onChange","target","margin","disabled","multiline","rows","endIcon","_c5","$RefreshReg$"],"sources":["/home/eswar/esw/chat2sql/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Container, \n  TextField, \n  Button, \n  Paper, \n  Typography, \n  Box,\n  CircularProgress,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  List,\n  ListItem,\n  Divider\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport { saveAs } from 'file-saver';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(3),\n  marginTop: theme.spacing(3),\n  backgroundColor: '#f5f5f5',\n}));\n\nconst ChatContainer = styled(Box)(({ theme }) => ({\n  height: 'calc(100vh - 200px)',\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageBubble = styled(Box)(({ theme, isUser }) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: isUser ? '#e3f2fd' : '#f5f5f5',\n  marginLeft: isUser ? 'auto' : 0,\n  marginRight: isUser ? 0 : 'auto',\n}));\n\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px',\n});\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch('http://localhost:8005/api/schema');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n\n    fetchSchema();\n  }, []);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    // Add user message\n    setMessages(prev => [...prev, { type: 'user', content: query }]);\n\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      \n      // Add system message with SQL\n      setMessages(prev => [...prev, { \n        type: 'system', \n        content: 'Generated SQL Query:',\n        sql: data.sql \n      }]);\n\n      // Add data message\n      setMessages(prev => [...prev, { \n        type: 'system', \n        content: 'Query Results:',\n        data: data.data,\n        columns: data.columns\n      }]);\n\n      // Add graph if available\n      if (data.graph) {\n        setMessages(prev => [...prev, { \n          type: 'system', \n          content: 'Data Visualization:',\n          graph: data.graph\n        }]);\n      }\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, { \n        type: 'error', \n        content: `Error: ${err.message}` \n      }]);\n    } finally {\n      setLoading(false);\n      setQuery('');\n    }\n  };\n\n  const downloadCSV = (data, columns) => {\n    if (!data || !columns) return;\n    const csvRows = [];\n    // Add header\n    csvRows.push(columns.join(','));\n    // Add rows\n    data.forEach(row => {\n      csvRows.push(columns.map(col => JSON.stringify(row[col] ?? '')).join(','));\n    });\n    const csvString = csvRows.join('\\n');\n    const blob = new Blob([csvString], { type: 'text/csv' });\n    saveAs(blob, 'query_results.csv');\n  };\n\n  const renderMessage = (message) => {\n    switch (message.type) {\n      case 'user':\n        return (\n          <MessageBubble isUser>\n            <Typography>{message.content}</Typography>\n          </MessageBubble>\n        );\n      case 'system':\n        return (\n          <MessageBubble>\n            <Typography variant=\"h6\" gutterBottom>{message.content}</Typography>\n            {message.sql && (\n              <pre style={{ \n                backgroundColor: '#f8f9fa', \n                padding: '1rem',\n                borderRadius: '4px',\n                overflowX: 'auto',\n                marginBottom: '1rem'\n              }}>\n                {message.sql}\n              </pre>\n            )}\n            {message.data && message.columns && (\n              <>\n                <TableContainer>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        {message.columns.map((column) => (\n                          <TableCell key={column}>{column}</TableCell>\n                        ))}\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {message.data.map((row, i) => (\n                        <TableRow key={i}>\n                          {message.columns.map((column) => (\n                            <TableCell key={column}>{row[column]}</TableCell>\n                          ))}\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"primary\" \n                    onClick={() => downloadCSV(message.data, message.columns)}\n                  >\n                    Download CSV\n                  </Button>\n                </Box>\n              </>\n            )}\n            {message.graph && (\n              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                <img \n                  src={`data:image/png;base64,${message.graph}`}\n                  alt=\"Data Visualization\"\n                  style={{ maxWidth: '100%', height: 'auto' }}\n                />\n              </Box>\n            )}\n          </MessageBubble>\n        );\n      case 'error':\n        return (\n          <MessageBubble>\n            <Alert severity=\"error\">{message.content}</Alert>\n          </MessageBubble>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ display: 'flex', alignItems: 'center', my: 3 }}>\n        <Icon src={BrainIcon} alt=\"Brain\" />\n        <Typography variant=\"h4\" component=\"h1\">\n          PostgreSQL Natural Language Query Assistant\n        </Typography>\n      </Box>\n\n      {schemaLoading && (\n        <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n          <Typography sx={{ ml: 2 }}>Loading database schema...</Typography>\n        </Box>\n      )}\n\n      <ChatContainer ref={chatContainerRef}>\n        {messages.map((message, index) => (\n          <Box key={index}>\n            {renderMessage(message)}\n          </Box>\n        ))}\n        {loading && (\n          <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n            <CircularProgress size={24} />\n            <Typography sx={{ ml: 2 }}>Processing...</Typography>\n          </Box>\n        )}\n      </ChatContainer>\n\n      <StyledPaper>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            label=\"Enter your question\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={!schema || schemaLoading || loading}\n            multiline\n            rows={2}\n          />\n          <Button \n            type=\"submit\" \n            variant=\"contained\" \n            color=\"primary\"\n            disabled={loading || !schema || schemaLoading}\n            sx={{ mt: 2 }}\n            endIcon={<SendIcon />}\n          >\n            Send\n          </Button>\n        </form>\n      </StyledPaper>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}