{"ast":null,"code":"var _jsxFileName = \"/home/eswar/esw/chat2sql/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, TextField, Button, Paper, Typography, Box, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, List, ListItem, Divider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: '#f5f5f5',\n  display: 'flex',\n  gap: theme.spacing(2),\n  alignItems: 'flex-start',\n  maxWidth: '1200px',\n  margin: '0 auto'\n}));\n_c = StyledPaper;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  height: 'calc(100vh - 180px)',\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n}));\n_c2 = ChatContainer;\nconst TableWrapper = styled(Box)(({\n  theme\n}) => ({\n  maxHeight: '400px',\n  overflowY: 'auto',\n  border: '1px solid #e0e0e0',\n  borderRadius: theme.spacing(1),\n  '& .MuiTable-root': {\n    borderCollapse: 'separate',\n    borderSpacing: 0\n  },\n  '& .MuiTableHead-root': {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: '#f5f5f5',\n    zIndex: 1\n  },\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f5f5f5',\n    fontWeight: 'bold',\n    borderBottom: '2px solid #e0e0e0'\n  },\n  '& .MuiTableCell-root': {\n    padding: theme.spacing(1),\n    whiteSpace: 'nowrap'\n  }\n}));\n_c3 = TableWrapper;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  position: 'fixed',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  boxShadow: '0 -2px 4px rgba(0,0,0,0.1)',\n  zIndex: 1000\n}));\n_c4 = InputContainer;\nconst MessageBubble = styled(Box)(({\n  theme,\n  isUser\n}) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: isUser ? '#e3f2fd' : '#f5f5f5',\n  marginLeft: isUser ? 'auto' : 0,\n  marginRight: isUser ? 0 : 'auto'\n}));\n_c5 = MessageBubble;\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px'\n});\n_c6 = Icon;\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch('http://localhost:8005/api/schema');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n    fetchSchema();\n  }, []);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: query\n    }]);\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n\n      // Add system message with SQL\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Generated SQL Query:',\n        sql: data.sql\n      }]);\n\n      // Add data message\n      setMessages(prev => [...prev, {\n        type: 'system',\n        content: 'Query Results:',\n        data: data.data,\n        columns: data.columns\n      }]);\n\n      // Add graph if available\n      if (data.graph) {\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: 'Data Visualization:',\n          graph: data.graph\n        }]);\n      }\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        content: `Error: ${err.message}`\n      }]);\n    } finally {\n      setLoading(false);\n      setQuery('');\n    }\n  };\n  const handleDownloadCSV = async (data, columns) => {\n    try {\n      // Get filename from user\n      const filename = prompt('Enter filename for CSV download:', 'query_results.csv');\n      if (!filename) return; // User cancelled\n\n      // Ensure filename has .csv extension\n      const finalFilename = filename.endsWith('.csv') ? filename : `${filename}.csv`;\n      const response = await fetch('http://localhost:5000/api/download-csv', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: data,\n          columns: columns,\n          filename: finalFilename\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to download CSV');\n      }\n      const result = await response.json();\n\n      // Convert base64 to blob\n      const byteCharacters = atob(result.content);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], {\n        type: 'text/csv;charset=utf-8'\n      });\n\n      // Save file using FileSaver.js\n      saveAs(blob, result.filename);\n    } catch (error) {\n      console.error('Error downloading CSV:', error);\n      alert('Failed to download CSV file');\n    }\n  };\n  const renderMessage = message => {\n    switch (message.type) {\n      case 'user':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          isUser: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this);\n      case 'system':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), message.sql && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f8f9fa',\n              padding: '1rem',\n              borderRadius: '4px',\n              overflowX: 'auto',\n              marginBottom: '1rem'\n            },\n            children: message.sql\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), message.data && message.columns && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableWrapper, {\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  stickyHeader: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: message.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: column\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: message.data.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: message.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row[column]\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 31\n                      }, this))\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleDownloadCSV(message.data, message.columns),\n                startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 32\n                }, this),\n                children: \"Download CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), message.graph && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${message.graph}`,\n              alt: \"Data Visualization\",\n              style: {\n                maxWidth: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(MessageBubble, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (query.trim() && !loading && schema && !schemaLoading) {\n        handleSubmit(e);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      pb: '80px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        src: BrainIcon,\n        alt: \"Brain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"PostgreSQL Natural Language Query Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), schemaLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Loading database schema...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      ref: chatContainerRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n        children: renderMessage(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            ml: 2\n          },\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter your question\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyPress: handleKeyPress,\n          variant: \"outlined\",\n          disabled: !schema || schemaLoading || loading,\n          multiline: true,\n          rows: 1,\n          sx: {\n            flex: 1,\n            '& .MuiOutlinedInput-root': {\n              height: '48px'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading || !schema || schemaLoading,\n          onClick: handleSubmit,\n          sx: {\n            height: '48px',\n            minWidth: '100px'\n          },\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 22\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2hJzkDGu6ByeEeCp44jhGlbS0a4=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"TableWrapper\");\n$RefreshReg$(_c4, \"InputContainer\");\n$RefreshReg$(_c5, \"MessageBubble\");\n$RefreshReg$(_c6, \"Icon\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","TextField","Button","Paper","Typography","Box","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","List","ListItem","Divider","styled","BrainIcon","GenerateIcon","SuccessIcon","ErrorIcon","EditIcon","CancelIcon","SendIcon","DownloadIcon","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","padding","spacing","backgroundColor","display","gap","alignItems","maxWidth","margin","_c","ChatContainer","height","overflowY","borderRadius","marginBottom","boxShadow","_c2","TableWrapper","maxHeight","border","borderCollapse","borderSpacing","position","top","zIndex","fontWeight","borderBottom","whiteSpace","_c3","InputContainer","bottom","left","right","_c4","MessageBubble","isUser","marginLeft","marginRight","_c5","Icon","width","_c6","App","_s","query","setQuery","loading","setLoading","error","setError","messages","setMessages","schema","setSchema","schemaLoading","setSchemaLoading","chatContainerRef","fetchSchema","response","fetch","ok","Error","data","json","startsWith","err","message","current","scrollTop","scrollHeight","handleSubmit","e","preventDefault","prev","type","content","method","headers","body","JSON","stringify","detail","sql","columns","graph","handleDownloadCSV","filename","prompt","finalFilename","endsWith","result","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","console","alert","renderMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","style","overflowX","size","stickyHeader","map","column","row","sx","justifyContent","mt","color","onClick","startIcon","src","alt","severity","handleKeyPress","key","shiftKey","trim","flexDirection","pb","my","component","ml","ref","index","fullWidth","label","value","onChange","target","onKeyPress","disabled","multiline","rows","flex","minWidth","endIcon","_c7","$RefreshReg$"],"sources":["/home/eswar/esw/chat2sql/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Container, \n  TextField, \n  Button, \n  Paper, \n  Typography, \n  Box,\n  CircularProgress,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  List,\n  ListItem,\n  Divider\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport BrainIcon from './assets/brain.png';\nimport GenerateIcon from './assets/generative.png';\nimport SuccessIcon from './assets/database-management.png';\nimport ErrorIcon from './assets/browser.png';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport SendIcon from '@mui/icons-material/Send';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { saveAs } from 'file-saver';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: '#f5f5f5',\n  display: 'flex',\n  gap: theme.spacing(2),\n  alignItems: 'flex-start',\n  maxWidth: '1200px',\n  margin: '0 auto',\n}));\n\nconst ChatContainer = styled(Box)(({ theme }) => ({\n  height: 'calc(100vh - 180px)',\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n}));\n\nconst TableWrapper = styled(Box)(({ theme }) => ({\n  maxHeight: '400px',\n  overflowY: 'auto',\n  border: '1px solid #e0e0e0',\n  borderRadius: theme.spacing(1),\n  '& .MuiTable-root': {\n    borderCollapse: 'separate',\n    borderSpacing: 0,\n  },\n  '& .MuiTableHead-root': {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: '#f5f5f5',\n    zIndex: 1,\n  },\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f5f5f5',\n    fontWeight: 'bold',\n    borderBottom: '2px solid #e0e0e0',\n  },\n  '& .MuiTableCell-root': {\n    padding: theme.spacing(1),\n    whiteSpace: 'nowrap',\n  },\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  boxShadow: '0 -2px 4px rgba(0,0,0,0.1)',\n  zIndex: 1000,\n}));\n\nconst MessageBubble = styled(Box)(({ theme, isUser }) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: isUser ? '#e3f2fd' : '#f5f5f5',\n  marginLeft: isUser ? 'auto' : 0,\n  marginRight: isUser ? 0 : 'auto',\n}));\n\nconst Icon = styled('img')({\n  width: '30px',\n  height: '30px',\n  marginRight: '10px',\n});\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [schemaLoading, setSchemaLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        setSchemaLoading(true);\n        const response = await fetch('http://localhost:8005/api/schema');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        if (data.schema && data.schema.startsWith('Error:')) {\n          throw new Error(data.schema);\n        }\n        setSchema(data.schema);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setSchemaLoading(false);\n      }\n    };\n\n    fetchSchema();\n  }, []);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!schema) {\n      setError('Database schema not available. Please check your connection.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    // Add user message\n    setMessages(prev => [...prev, { type: 'user', content: query }]);\n\n    try {\n      const response = await fetch('http://localhost:8005/api/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail);\n      \n      // Add system message with SQL\n      setMessages(prev => [...prev, { \n        type: 'system', \n        content: 'Generated SQL Query:',\n        sql: data.sql \n      }]);\n\n      // Add data message\n      setMessages(prev => [...prev, { \n        type: 'system', \n        content: 'Query Results:',\n        data: data.data,\n        columns: data.columns\n      }]);\n\n      // Add graph if available\n      if (data.graph) {\n        setMessages(prev => [...prev, { \n          type: 'system', \n          content: 'Data Visualization:',\n          graph: data.graph\n        }]);\n      }\n    } catch (err) {\n      setError(err.message);\n      setMessages(prev => [...prev, { \n        type: 'error', \n        content: `Error: ${err.message}` \n      }]);\n    } finally {\n      setLoading(false);\n      setQuery('');\n    }\n  };\n\n  const handleDownloadCSV = async (data, columns) => {\n    try {\n      // Get filename from user\n      const filename = prompt('Enter filename for CSV download:', 'query_results.csv');\n      if (!filename) return; // User cancelled\n\n      // Ensure filename has .csv extension\n      const finalFilename = filename.endsWith('.csv') ? filename : `${filename}.csv`;\n\n      const response = await fetch('http://localhost:5000/api/download-csv', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          data: data,\n          columns: columns,\n          filename: finalFilename\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to download CSV');\n      }\n\n      const result = await response.json();\n      \n      // Convert base64 to blob\n      const byteCharacters = atob(result.content);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], { type: 'text/csv;charset=utf-8' });\n\n      // Save file using FileSaver.js\n      saveAs(blob, result.filename);\n    } catch (error) {\n      console.error('Error downloading CSV:', error);\n      alert('Failed to download CSV file');\n    }\n  };\n\n  const renderMessage = (message) => {\n    switch (message.type) {\n      case 'user':\n        return (\n          <MessageBubble isUser>\n            <Typography>{message.content}</Typography>\n          </MessageBubble>\n        );\n      case 'system':\n        return (\n          <MessageBubble>\n            <Typography variant=\"h6\" gutterBottom>{message.content}</Typography>\n            {message.sql && (\n              <pre style={{ \n                backgroundColor: '#f8f9fa', \n                padding: '1rem',\n                borderRadius: '4px',\n                overflowX: 'auto',\n                marginBottom: '1rem'\n              }}>\n                {message.sql}\n              </pre>\n            )}\n            {message.data && message.columns && (\n              <>\n                <TableWrapper>\n                  <TableContainer>\n                    <Table size=\"small\" stickyHeader>\n                      <TableHead>\n                        <TableRow>\n                          {message.columns.map((column) => (\n                            <TableCell key={column}>{column}</TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {message.data.map((row, i) => (\n                          <TableRow key={i}>\n                            {message.columns.map((column) => (\n                              <TableCell key={column}>{row[column]}</TableCell>\n                            ))}\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TableWrapper>\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n                  <Button \n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleDownloadCSV(message.data, message.columns)}\n                    startIcon={<DownloadIcon />}\n                  >\n                    Download CSV\n                  </Button>\n                </Box>\n              </>\n            )}\n            {message.graph && (\n              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                <img \n                  src={`data:image/png;base64,${message.graph}`}\n                  alt=\"Data Visualization\"\n                  style={{ maxWidth: '100%', height: 'auto' }}\n                />\n              </Box>\n            )}\n          </MessageBubble>\n        );\n      case 'error':\n        return (\n          <MessageBubble>\n            <Alert severity=\"error\">{message.content}</Alert>\n          </MessageBubble>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (query.trim() && !loading && schema && !schemaLoading) {\n        handleSubmit(e);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ height: '100vh', display: 'flex', flexDirection: 'column', pb: '80px' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n        <Icon src={BrainIcon} alt=\"Brain\" />\n        <Typography variant=\"h4\" component=\"h1\">\n          PostgreSQL Natural Language Query Assistant\n        </Typography>\n      </Box>\n\n      {schemaLoading && (\n        <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n          <Typography sx={{ ml: 2 }}>Loading database schema...</Typography>\n        </Box>\n      )}\n\n      <ChatContainer ref={chatContainerRef}>\n        {messages.map((message, index) => (\n          <Box key={index}>\n            {renderMessage(message)}\n          </Box>\n        ))}\n        {loading && (\n          <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n            <CircularProgress size={24} />\n            <Typography sx={{ ml: 2 }}>Processing...</Typography>\n          </Box>\n        )}\n      </ChatContainer>\n\n      <InputContainer>\n        <StyledPaper>\n          <TextField\n            fullWidth\n            label=\"Enter your question\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyPress={handleKeyPress}\n            variant=\"outlined\"\n            disabled={!schema || schemaLoading || loading}\n            multiline\n            rows={1}\n            sx={{ \n              flex: 1,\n              '& .MuiOutlinedInput-root': {\n                height: '48px',\n              }\n            }}\n          />\n          <Button \n            type=\"submit\" \n            variant=\"contained\" \n            color=\"primary\"\n            disabled={loading || !schema || schemaLoading}\n            onClick={handleSubmit}\n            sx={{ \n              height: '48px',\n              minWidth: '100px'\n            }}\n            endIcon={<SendIcon />}\n          >\n            Send\n          </Button>\n        </StyledPaper>\n      </InputContainer>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}